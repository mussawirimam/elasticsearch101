Ingest Pipelines
Process and enrich your data.
1) Pipelines use processors to perform some action on a document.

2) Processors are executed in order.

3) Ingest pipelines can be used in the update_by-query and reindex APls.

GET earthquakes/_search
-------------------
CONSOLE OUTPUT
-------------------
  "hits" : [
      {
        "_index" : "earthquakes",
        "_type" : "_doc",
        "_id" : "uxTEW48B8fnXy2vw-H5b",
        "_score" : 1.0,
        "_source" : {
          "Status" : "Reviewed",
          "Magnitude Source" : "US",
          "Time" : "06:59:05",
          "Latitude" : -47.911,
          "Magnitude" : 6.2,
          "Longitude" : 99.593,
          "Date" : "02/05/2010",
          "Depth" : 1.0,
          "Source" : "US",
          "Type" : "Rock Burst",
          "Depth Seismic Stations" : 203.0,
          "Magnitude Type" : "MWC",
          "Azimuthal Gap" : 43.9,
          "@timestamp" : "2010-02-05T00:00:00.000-05:00",
          "Location Source" : "US",
          "location" : "-47.911,99.593",
          "ID" : "USP000H6Z1",
          "Root Mean Square" : 1.14
        }
      },
-------------------
CONSOLE OUTPUT END
-------------------
PUT _ingest/pipeline/earthquakes_refactor
{
  "description": "refractoring the earthquakes dataset",
  "processors": [
    {
      "remove": {
        "field": ["Latitude", "Longitude"]
      }
    },
    {
      "set": {
        "field": "timestamp",
        "value": "{{_source.Date}} {{_source.Time}}"
      }
    },
    {
      "date": {
        "field": "timestamp",
        "formats": ["MM/dd/yyyy HH:mm:ss"]
      }
    },
    {
      "remove": {
        "field": ["Date", "Time", "timestamp"]
      }
    }
  ]
}

-------------------
CONSOLE OUTPUT
-------------------
{
  "acknowledged" : true
}

-------------------
CONSOLE OUTPUT END
-------------------
POST _reindex
{
 "source": {
   "index": "earthquakes"
 },
 "dest": {
   "index": "earthquakes_refactored"
   , "pipeline": "earthquakes_refactor"
 }
}

-------------------
CONSOLE OUTPUT
-------------------
{
  "took" : 7354,
  "timed_out" : false,
  "total" : 23411,
  "updated" : 0,
  "created" : 23411,
  "deleted" : 0,
  "batches" : 24,
  "version_conflicts" : 0,
  "noops" : 0,
  "retries" : {
    "bulk" : 0,
    "search" : 0
  },
  "throttled_millis" : 0,
  "requests_per_second" : -1.0,
  "throttled_until_millis" : 0,
  "failures" : [ ]
}

-------------------
CONSOLE OUTPUT END
-------------------
GET earthquakes_refactored/_search

-------------------
CONSOLE OUTPUT
-------------------
    "hits" : [
      {
        "_index" : "earthquakes_refactored",
        "_type" : "_doc",
        "_id" : "uxTEW48B8fnXy2vw-H5b",
        "_score" : 1.0,
        "_source" : {
          "Status" : "Reviewed",
          "Magnitude Source" : "US",
          "Magnitude" : 6.2,
          "Depth" : 1.0,
          "Source" : "US",
          "Type" : "Rock Burst",
          "Depth Seismic Stations" : 203.0,
          "Magnitude Type" : "MWC",
          "Azimuthal Gap" : 43.9,
          "@timestamp" : "2010-02-05T06:59:05.000Z",
          "Location Source" : "US",
          "location" : "-47.911,99.593",
          "ID" : "USP000H6Z1",
          "Root Mean Square" : 1.14
        }
      },
-------------------
CONSOLE OUTPUT END
-------------------
#So I want to add a array to each document called words, and that array is going to be each individual word in the text entry field, then I want to add another field that's called word count,
# which tells me how many words there are in the text entry field. Just another way of breaking this text entry field out. To do some analysis on it. 
GET shakespeare/_search
-------------------
CONSOLE OUTPUT
-------------------
"hits" : [
      {
        "_index" : "shakespeare",
        "_type" : "_doc",
        "_id" : "35752",
        "_score" : 1.0,
        "_source" : {
          "type" : "line",
          "line_id" : 35753,
          "play_name" : "Hamlet",
          "speech_number" : 15,
          "line_number" : "4.7.69",
          "speaker" : "KING CLAUDIUS",
          "text_entry" : "To an exploit, now ripe in my device,"
        }
      },
      {
        "_index" : "shakespeare",
        "_type" : "_doc",
        "_id" : "35753",
        "_score" : 1.0,
        "_source" : {
          "type" : "line",
          "line_id" : 35754,
          "play_name" : "Hamlet",
          "speech_number" : 15,
          "line_number" : "4.7.70",
          "speaker" : "KING CLAUDIUS",
          "text_entry" : "Under the which he shall not choose but fall:"
        }
-------------------
CONSOLE OUTPUT END
-------------------
PUT _ingest/pipeline/shakespeare_words
{
  "description": "Create the words array and word_count fields",
  "processors": [
    {
      "split": {
        "field": "text_entry",
        "separator": "\\s+",
        "target_field" : "words"
      }
    },
    {
      "script": {
        "lang": "painless",
        "source": "ctx.word_count = ctx.words.length"
      }
    }
  ]
}
-------------------
CONSOLE OUTPUT 
-------------------
{
  "acknowledged" : true
}
-------------------
CONSOLE OUTPUT END
-------------------
# using update by query to directly inject the changes into the index without re-indexing

POST shakespeare/_update_by_query?pipeline=shakespeare_words

-------------------
CONSOLE OUTPUT 
-------------------
{
  "took" : 20906,
  "timed_out" : false,
  "total" : 111396,
  "updated" : 111396,
  "deleted" : 0,
  "batches" : 112,
  "version_conflicts" : 0,
  "noops" : 0,
  "retries" : {
    "bulk" : 0,
    "search" : 0
  },
  "throttled_millis" : 0,
  "requests_per_second" : -1.0,
  "throttled_until_millis" : 0,
  "failures" : [ ]
}

-------------------
CONSOLE OUTPUT END
-------------------
GET shakespeare/_search

-------------------
CONSOLE OUTPUT 
-------------------
    "hits" : [
      {
        "_index" : "shakespeare",
        "_type" : "_doc",
        "_id" : "42398",
        "_score" : 1.0,
        "_source" : {
          "play_name" : "Henry VIII",
          "speech_number" : 110,
          "text_entry" : "O Cromwell,",
          "words" : [
            "O",
            "Cromwell,"
          ],
          "type" : "line",
          "line_id" : 42399,
          "word_count" : 2,
          "line_number" : "3.2.523",
          "speaker" : "CARDINAL WOLSEY"
        }
      },
      {
        "_index" : "shakespeare",
        "_type" : "_doc",
        "_id" : "42399",
        "_score" : 1.0,
        "_source" : {
          "play_name" : "Henry VIII",
          "speech_number" : 110,
          "text_entry" : "Thou fallst a blessed martyr! Serve the king;",
          "words" : [
            "Thou",
            "fallst",
            "a",
            "blessed",
            "martyr!",
            "Serve",
            "the",
            "king;"
          ],
          "type" : "line",
          "line_id" : 42400,
          "word_count" : 8,
          "line_number" : "3.2.524",
          "speaker" : "CARDINAL WOLSEY"
        }
      },
      {
-------------------
CONSOLE OUTPUT END
-------------------
GET _cat/indices?v
GET shakespeare/_search
DELETE shakespeare_refractor

GET shakespeare_refractor/_search

POST _reindex
{
 "source": {
   "index": "shakespeare"
 },
 "dest": {
   "index": "shakespeare_refractor"
   , "pipeline": "shakespeare_refractor"
 }
}

PUT _ingest/pipeline/shakespeare_refractor
{
  "description": "refactoring the Shakespeare dataset",
  "processors": [
    {
      "set": {
        "field": "play_name_two",
        "value": "{{play_name}}"
      }
    },
    {
      "remove": {
        "field": "play_name"
      }
    }
  ]
}

-------------------
CONSOLE OUTPUT 
-------------------
Document before the ingest pipeline
      {
        "_index" : "shakespeare",
        "_type" : "_doc",
        "_id" : "0",
        "_score" : 1.0,
        "_source" : {
          "type" : "act",
          "line_id" : 1,
          "play_name" : "Henry IV",
          "speech_number" : "",
          "line_number" : "",
          "speaker" : "",
          "text_entry" : "ACT I"
        }
-----------------------------
Document after the ingest pipeline applied
    "hits" : [
      {
        "_index" : "shakespeare_refractor",
        "_type" : "_doc",
        "_id" : "54590",
        "_score" : 1.0,
        "_source" : {
          "play_name_two" : "Loves Labours Lost",
          "speech_number" : 96,
          "text_entry" : "Shall we resolve to woo these girls of France?",
          "type" : "line",
          "line_id" : 54591,
          "line_number" : "4.3.380",
          "speaker" : "LONGAVILLE"
        }
      },
-------------------
CONSOLE OUTPUT END
-------------------
